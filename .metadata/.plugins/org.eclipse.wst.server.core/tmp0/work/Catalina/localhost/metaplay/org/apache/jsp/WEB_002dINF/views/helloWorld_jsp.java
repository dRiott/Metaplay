/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.24
 * Generated at: 2015-10-14 17:58:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class helloWorld_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("<title>Log In</title>\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.11.3.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\t\t\n");
      out.write("\n");
      out.write("\t\t$(document).ready(function(){\n");
      out.write("\t\t\tvar countTEXT = 0;\n");
      out.write("\t\t\tvar countJSON = 0;\n");
      out.write("\t\t\tvar json;\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//get JSON data\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t        url: \"/metaplay/AJAX2\",\n");
      out.write("\t\t        method: \"get\",\n");
      out.write("\t\t        dataType: \"json\",\n");
      out.write("\t\t        success: successfulJSON\n");
      out.write("\t\t\t}).fail(function(data) {\n");
      out.write("\t            console.log(\"AJAX JSON load failed\");\n");
      out.write("\t        });\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//text return\n");
      out.write("\t\t\tfunction getMyName() {\n");
      out.write("\t\t        console.log(\"in getMYName\");\t\t\t\t\t//for debugging\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t$.ajax({\n");
      out.write("\t\t\t        url: \"/metaplay/AJAX?counter=\"+countTEXT, \n");
      out.write("\t\t\t        method: \"get\", \n");
      out.write("\t\t\t        dataType: \"text\",\n");
      out.write("\t\t\t        success: successfulAJAX\n");
      out.write("\t\t\t\t}).fail(function(data) {\n");
      out.write("\t\t            console.log(\"AJAX load failed\");\n");
      out.write("\t\t        });\n");
      out.write("\t\t        \n");
      out.write("\t\t        countTEXT++;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\t//TEXT functions\n");
      out.write("\t\t\tfunction successfulAJAX(returnedData, status) {\n");
      out.write("\t\t\t\tconsole.log(\"in success TEXT\");\t\t\t\t\t\t//for debugging\n");
      out.write("\t\t\t\t$('#hello').html(\"I am \" + returnedData);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#button').click(function() {\n");
      out.write("\t\t        console.log(\"in button\");\t\t\t\t\t\t\t//for debugging\n");
      out.write("\t\t\t\tgetMyName();\n");
      out.write("\t\t    });\n");
      out.write("\t\t\t\n");
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//JSON functions\n");
      out.write("\t\t\tfunction successfulJSON(returnedData, status) {\n");
      out.write("\t\t\t\tconsole.log(\"in success JSON\");\t\t\t\t\t\t//for debugging\n");
      out.write("\t\t\t\tconsole.log(returnedData);\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tjson = returnedData;\t\t\t\t\t\t\t\t//set global variable to access on click\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#button2').click(function() {\n");
      out.write("\t\t        console.log(\"in button2\");\t\t\t\t\t\t\t//for debugging\n");
      out.write("\t\t        console.log(json);\n");
      out.write("\t\t        \n");
      out.write("\t\t        \n");
      out.write(" \t\t\t\t$('#hello2').html(\"Hello my name is \" + json[countJSON].name + \" \" + json[countJSON].id);\t//fill hello2 html with new name each time\n");
      out.write(" \t   \t\t\tcountJSON++;\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t});\t\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<form name=\"testPage\">\n");
      out.write(" \t <div id=\"hello\">I am </div></br>\n");
      out.write(" \t <input id=\"button\" type=\"button\" value= \"Add name Text return\"/>\n");
      out.write(" \t </br></br>\n");
      out.write(" \t <div id=\"hello2\">Hello my name is </div></br>\n");
      out.write(" \t <input id=\"button2\" type=\"button\" value= \"Add name JSON return\"/>\n");
      out.write("\t</form>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
