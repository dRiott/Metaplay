/**
 *  Configures the sortable, draggable, and selectable tracks.
 */

$(document).ready(function () {

	//set up the tables to be sortable, and connect them for dropping
	$("#tracksTable tbody").sortable({
		connectWith: "#playlistTable tbody"
	});
	
	$("#playlistTable tbody").sortable({
		connectWith: "#tracksTable tbody"
	});
	
	//set up each tr so that when it's grabbed, it doesn't scrunch its tds.
	$('td, th', '#tracksTable').each(function () {
        var cell = $(this);
        cell.width(cell.width());
    });
	
	$('td, th', '#playlistTable').each(function () {
		var cell = $(this);
		cell.width(cell.width());
	});

	
	//grab the width of the tr and set the th accordingly. workaround for scrollable tbodies that are sortable/draggable.
	$('.tdWidth').each(function(index) {
	    $("#playlistTHeadTh" + index).css("width", 1.1*$(this).width());
	    $("#trackTHeadTh" + index).css("width", 1.1*$(this).width());
	    if (index > 2) {
	    	return false;
	    }
	});
	
	//sents ajax call to save the playlist. calls grabTracksInfo to get the track data.
	$("#playlistSubmitButton").click(function(e) {
		
		var tracksInfo = grabTracksInfo();
		
		e.preventDefault();
		$(document.body).css({'cursor' : 'wait'});
		
		$.ajax({
			headers: { 
		        'Accept': 'application/json',
		        'Content-Type': 'application/json' 
		    },
			url: '/metaplay/rest/playlist',
			type: 'POST',
			dataType: 'json',
			data: tracksInfo,
			success: playlistSuccess,
			error: playlistError
		})

	})
	
	
	//		

	
}); // end document.ready

	
function playlistSuccess() {
	$(document.body).css({'cursor' : 'default'});
	$("#messageDiv").html("Playlist created successfully.").show(1000);
	$("#playlistTable tbody tr").remove();
}

function playlistError(returnedData, status) {
	console.log("ERROR:Fail to save the playlist via REST, Data: " + returnedData);
	console.log("ERROR:Fail to save the playlist via REST, Status: " + status)
}


function grabTracksInfo() {
	console.log("Calling the grabTrakcsInfo function");
	$("#playlistTable tbody tr").each(function () {
		
	})
	
}


