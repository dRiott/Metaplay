package com.thoughtriott.metaplay.data.wrappers;

import org.jets3t.service.S3Service;
import org.jets3t.service.acl.AccessControlList;
import org.jets3t.service.acl.GroupGrantee;
import org.jets3t.service.acl.Permission;
import org.jets3t.service.impl.rest.httpclient.RestS3Service;
import org.jets3t.service.model.S3Bucket;
import org.jets3t.service.model.S3Object;
import org.jets3t.service.security.AWSCredentials;
import org.jets3t.service.security.ProviderCredentials;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;

import com.amazonaws.services.s3.model.AmazonS3Exception;

public class AmazonService implements AmazonCredentials {

	//Utility method for uploading an image to S3, see: http://www.jets3t.org/toolkit/code-samples.html#downloading
	@RequestMapping(value = "/saveimage")
	protected void saveProfilePicture(MultipartFile image, String accountname) {
		try {
			AWSCredentials awsCredentials = new AWSCredentials(AWS_KEY, AWS_SECRET_KEY);	
			
			S3Service s3 = new RestS3Service((ProviderCredentials) awsCredentials);
			S3Bucket bucket = s3.getBucket(BUCKETNAME);
			System.out.println("Got the bucket: " + bucket);
			
			S3Object imageObject = new S3Object(PROFILEPICS + accountname);
			imageObject.setDataInputStream(image.getInputStream());
			imageObject.setContentLength(image.getSize());
			imageObject.setContentType(image.getContentType());
			AccessControlList acl = new AccessControlList();
			acl.setOwner(bucket.getOwner());
			acl.grantPermission(GroupGrantee.ALL_USERS, Permission.PERMISSION_READ);
			imageObject.setAcl(acl);
			s3.putObject(bucket, imageObject);
		} catch(Exception e) {
			System.out.println(e.getMessage());
			throw new AmazonS3Exception(e.getMessage());
		}
	}
	
}
