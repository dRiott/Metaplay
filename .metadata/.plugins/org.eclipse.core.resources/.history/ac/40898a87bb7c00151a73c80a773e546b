package com.thoughtriott.metaplay.controllers;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.thoughtriott.metaplay.data.entities.Playlist;
import com.thoughtriott.metaplay.data.wrappers.CreatePlaylistWrapper;
import com.thoughtriott.metaplay.data.wrappers.RepositoryKeeper;

@Controller
@RequestMapping("/playlist")
public class PlaylistController extends RepositoryKeeper {

	@RequestMapping(value="/add", method=RequestMethod.GET)
	public String addPlaylist(Model model){
		
		model.addAttribute("accounts", accountRepository.findAll());
		model.addAttribute("tracks", trackRepository.findAll());

		return "playlist_add";
	}
	
	@RequestMapping("/review")
	public String review(@ModelAttribute Playlist playlist) {
		return "playlist_review";
	}
	
	@RequestMapping(value = "/save", method = RequestMethod.POST,produces = MediaType.APPLICATION_JSON_VALUE)
	public String savePlaylist(@RequestBody Object[] tracks){
		
		System.out.println("in the right controller method...");
		System.out.println("Tracks length: " + tracks.length);
		
		for (Object track : tracks) {
			System.out.println(track);
		}
		
		//"redirect:/playlist/add"
		return null;
	}
	
	@RequestMapping(value="/{playlistId}")
	public String findPlaylist(Model model, @PathVariable("playlistId") int playlistId) {
		model.addAttribute("playlist", playlistRepository.getOne(playlistId));
		return "single_playlist";
	}

	// ------------------------------ Model Attributes ------------------------------
	@ModelAttribute("createPlaylistWrapper")
	public CreatePlaylistWrapper getCreatePlaylistWrapper() {
		return new CreatePlaylistWrapper();
	}
	
	

}
